const cmd = require('node-cmd');
const nmap = require('node-nmap');
const express = require('express');
const request = require('request');
const bodyParser = require('body-parser');
const path = require('path');
const app = express();
const exec = require('child_process').exec;
var mysql = require('mysql');
var fs = require('fs');


var port = process.env.PORT || 8000;
if (process.env.VCAP_APPLICATION) {
	port = process.env.PORT;
}

var con = mysql.createConnection({
  host: "localhost",
  user: "root",
  password: "Pentest123!@#",
  database: "nodepentest"
});
con.connect(function(err) {
 	if (err) throw err;
	console.log("Connected!");
});

app.use(bodyParser.json());

app.listen(port, function () {
	console.log('app running on port: %d', port);
});

/////////////////////////////////////////////////////
/////////////////////////////////////////////////////
//
////////////////////////////////////////////////////
////////////////////////////////////////////////////


app.get('/api/nmap', async function (req, res) {

var hosts = req.query.host;
nmap.nmapLocation = "nmap"; //default
var filename = "";
var id = 0;

var datetime = new Date();
var insert_sql = "INSERT INTO RESULTS(type,status,host,start_date) VALUES('nmap','PENDING','"+hosts+"','"+datetime+"');";
con.query(insert_sql, function (err, result, fields) {
if(!err){
	res.status(200).send({ message: result.insertId });
	filename = ""+result.insertId+"_"+Math.floor(Math.random() * 100000000)+".txt";
	id = result.insertId;
}
else{res.status(200).send({ message: err });}
});

//    Accepts array or comma separated string of NMAP acceptable hosts
var nmapscan = new nmap.NmapScan(hosts,'-v');

nmapscan.on('complete', function(data){
	var update_sql = "UPDATE RESULTS SET status='COMPLETE', end_date='"+ new Date()+"',file_name='"+filename+"' where id="+id+";";
	console.log(update_sql);
	
	con.query(update_sql, function (err, result, fields) {
	if(!err){
		console.log('Record Updated');
	}
	else{
		console.log("Update Query Error: "+err);
	}
	});

	fs.writeFile('./Results/'+filename+'',JSON.stringify(data), function (err) {
  		if (err) throw err;
  		console.log("File Write Status: "+JSON.stringify(data));
  	});	

});

nmapscan.on('error', function(error){
	fs.writeFile('./Results/'+filename+'',error, function (err) {
  		if (err) throw err;
  		console.log("File write Error: "+error);
  	});
});
nmapscan.startScan();
});


app.get('/api/nikto', async function (req, res) {

	var command = 'nikto -host '+req.query.host;
	var datetime = new Date();
	var insert_sql = "INSERT INTO RESULTS(type,status,host,start_date) VALUES('nikto','PENDING','"+req.query.host+"','"+datetime+"');";

	con.query(insert_sql, function (err, result, fields) {
    if(!err){

    	res.status(200).send({ message: result.insertId });

			exec(command,function(err,stdout,stderr){

				var filename = ""+result.insertId+"_"+Math.floor(Math.random() * 100000000)+".txt";

				if(!err){

					var update_sql = "UPDATE RESULTS SET status='COMPLETE', end_date='"+ new Date()+"',file_name='"+filename+"' where id="+result.insertId+";";
					console.log(update_sql);
					con.query(update_sql, function (err, result, fields) {
						if(!err){
							console.log('Record Updated');
						}
						else{
							console.log("Update Query Error: "+err);
						}
					});

				fs.writeFile('./Results/'+filename+'',stdout, function (err) {
  				if (err) throw err;
  				console.log("File Write Status: "+stdout);
  				});
  
			}

			else{
				fs.writeFile('./Results/'+filename+'',stderr, function (err) {
  				if (err) throw err;
  				console.log("File write Error: "+stderr);
  				});
			}
		});
	}
	else{res.status(500).send({ message: err });}
	});
});


app.get('/api/wpscan', async function (req, res) {
	
	var r = request.get('https://'+req.query.host, function (err, res1, body) {
	var command = 'wpscan --url '+r.uri.href;
	console.log(command);
	var datetime = new Date();
	var insert_sql = "INSERT INTO RESULTS(type,status,host,start_date) VALUES('wpscan','PENDING','"+req.query.host+"','"+datetime+"');";

	con.query(insert_sql, function (err, result, fields) {
    if(!err){
    	res.status(200).send({ message: result.insertId });

			exec(command,function(err1,stdout,stderr){
				var filename = ""+result.insertId+"_"+Math.floor(Math.random() * 100000000)+".txt";
				console.log(filename);
				if(!err){

					var update_sql = "UPDATE RESULTS SET status='COMPLETE', end_date='"+ new Date()+"',file_name='"+filename+"' where id="+result.insertId+";";
					console.log(update_sql);
					con.query(update_sql, function (err, result, fields) {
						if(!err) {
							console.log('Record Updated');
						}
						else {
							console.log("Update Query Error: "+err);
						}
					});

				fs.writeFile('./Results/'+filename+'',stdout, function (err) {
  				if (err) throw err;
  				console.log("File Write Status: "+stderr);
  				});
			}

			else {
				console.log(err1);
				fs.writeFile('./Results/'+filename+'',err1, function (err) {
  				if (err) throw err;
  				console.log("File write Error: "+err1);
  				});
			}
		});
	}
	else {
		res.status(500).send({ message: err });
	}
	});
});
});

app.get('/api/results', async function (req, res) {
	
	var id = req.query.id;
	con.query("SELECT * FROM RESULTS WHERE id=" + id, function (err, result, fields) {
		if(!err) {
			if(Object.entries(result).length != 0) {

				res.status(200).send({ message: result });
				}
			else {

				res.status(200).send({ message: 'No record Found' });
			}
		}
		else {
			res.status(500).send({ message: err });
		}
	});
});

app.get('/api/file',function(req,res){
	var filename = req.query.file;

	fs.readFile('./Results/'+filename+'', 'utf8', function(err, contents) {
	if (!err){
   	res.status(200).send({ message: contents });
   }
   else{
   	   	res.status(200).send({ message: 'No such File or Directory '});

   }
   });
});