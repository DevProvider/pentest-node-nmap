const cmd = require('node-cmd');
const nmap = require('node-nmap');
const express = require('express');
const request = require('request');
const bodyParser = require('body-parser');
const path = require('path');
const app = express();
const exec = require('child_process').exec;


var port = process.env.PORT || 8000;
if (process.env.VCAP_APPLICATION) {
	port = process.env.PORT;
}

app.use(bodyParser.json());

app.listen(port, function () {
	console.log('app running on port: %d', port);
});

/////////////////////////////////////////////////////
/////////////////////////////////////////////////////
//
////////////////////////////////////////////////////
////////////////////////////////////////////////////


app.get('/api/nmap/quickscan', async function (req, res) {

var args = req.query.args;
nmap.nmapLocation = "nmap"; //default

//    Accepts array or comma separated string of NMAP acceptable hosts
var quickscan = new nmap.QuickScan(args);

quickscan.on('complete', function(data){
	console.log(data);
	res.status(200).send({ message: data });
});

quickscan.on('error', function(error){
	console.log(error);
	res.status(500).send({ message: data});

});
quickscan.startScan();
});


app.get('/api/nmap/nmapscan', async function (req, res) {

var hosts = req.query.hosts;
nmap.nmapLocation = "nmap"; //default

//    Accepts array or comma separated string of NMAP acceptable hosts
var nmapscan = new nmap.NmapScan(hosts,'-v');

nmapscan.on('complete', function(data){
	console.log(data);
	res.status(200).send({ message: data });
});

nmapscan.on('error', function(error){
	console.log(error);
	res.status(500).send({ message: data});

});
nmapscan.startScan();
});


app.get('/api/nikto', async function (req, res) {

	var command = 'nikto -host '+req.query.host;
	exec(command,function(err,stdout,stderr){
		
		if(!err){
			res.status(200).send({ message: stdout });
		}
		else{
			res.status(500).send({ message: stderr });
		}
	
	});
});
